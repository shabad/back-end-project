// <auto-generated />
using Levvel_backend_project;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Levvel_backend_project.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20190529170714_initial2")]
    partial class initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Levvel_backend_project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Levvel_backend_project.Models.Truck", b =>
                {
                    b.Property<int>("TruckId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Hours");

                    b.Property<string>("Phone");

                    b.Property<int>("Price");

                    b.Property<decimal>("Rating");

                    b.Property<string>("Title");

                    b.HasKey("TruckId");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("Levvel_backend_project.Models.TruckCategory", b =>
                {
                    b.Property<int>("TruckId");

                    b.Property<int>("CategoryId");

                    b.HasKey("TruckId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TruckCategories");
                });

            modelBuilder.Entity("Levvel_backend_project.Models.Truck", b =>
                {
                    b.OwnsOne("Levvel_backend_project.Models.Address", "Location", b1 =>
                        {
                            b1.Property<int>("TruckId");

                            b1.Property<string>("City");

                            b1.Property<string>("Country");

                            b1.Property<string>("State");

                            b1.Property<string>("Street");

                            b1.Property<string>("Zip");

                            b1.HasKey("TruckId");

                            b1.ToTable("Trucks");

                            b1.HasOne("Levvel_backend_project.Models.Truck")
                                .WithOne("Location")
                                .HasForeignKey("Levvel_backend_project.Models.Address", "TruckId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Levvel_backend_project.Models.Coordinates", "Coordinates", b1 =>
                        {
                            b1.Property<int>("TruckId");

                            b1.Property<decimal>("Latitude");

                            b1.Property<decimal>("Longitude");

                            b1.HasKey("TruckId");

                            b1.ToTable("Trucks");

                            b1.HasOne("Levvel_backend_project.Models.Truck")
                                .WithOne("Coordinates")
                                .HasForeignKey("Levvel_backend_project.Models.Coordinates", "TruckId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Levvel_backend_project.Models.TruckCategory", b =>
                {
                    b.HasOne("Levvel_backend_project.Models.Category", "Category")
                        .WithMany("TruckCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Levvel_backend_project.Models.Truck", "Truck")
                        .WithMany("TruckCategory")
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
